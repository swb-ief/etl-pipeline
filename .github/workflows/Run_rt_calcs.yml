name: R_proc

on:
  workflow_dispatch:
  schedule:
    - cron: '00 23 * * *'

jobs:
  setup_run_r:
    runs-on: ubuntu-18.04
    env:
      CRAN_REPO: 'https://packagemanager.rstudio.com/all/__linux__/bionic/latest'

    steps:
      - name: checkout this repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name:  setup R
        uses: r-lib/actions/setup-r@master
        with:
          r-version: '3.6.3'
      
      - name: update apt-get
        run: sudo apt-get update -y

      - name: install v8
        run: sudo apt-get install libv8-dev libcurl4-openssl-dev  -y 

        
      - name: Create Data Directory
        run: |
          echo "trying to create a direcotry"
          sudo mkdir /usr/data/
          echo "created directory"
          sudo chmod -R ugo+rwx /usr/data/
          
      - name: Restore R package cache
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: r-${{ hashFiles('DESCRIPTION') }} 
          
      - name: Install deps
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          install.packages("remotes", repos = c("CRAN" = Sys.getenv("CRAN_REPO")))
          install.packages("devtools")
          install.packages("httpuv")
          install.packages("drat")
          install.packages("gridExtra")
          drat:::add("epiforecasts")
          install.packages("EpiEstim")
          install.packages("magrittr")
          install.packages("readr")
          install.packages("knitr")
          install.packages("dplyr")
          install.packages("tidyverse")
        shell: Rscript {0}     

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
      - name: Configure AWS Credentials for data repository
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
          
      - name: Executing Wards UpdateEpiStatsTask luigi task
        run: |
          python -m luigi --module tasks UpdateEpiStatsWardsTask --local-scheduler

      - name: Executing Districts UpdateEpiStatsTask luigi task
        run: |
          python -m luigi --module tasks UpdateEpiStatsDistrictsTask --local-scheduler
